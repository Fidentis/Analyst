/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cz.fidentis.gui.trainingModel;

import java.awt.Component;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import javax.swing.JCheckBox;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//cz.fidentis.gui.trainingModel//PointsToCalculate//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "PointsToCalculateTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE", 
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "output", openAtStartup = false)
@ActionID(category = "Window", id = "cz.fidentis.gui.trainingModel.PointsToCalculateTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_PointsToCalculateAction",
        preferredID = "PointsToCalculateTopComponent"
)
@Messages({
    "CTL_PointsToCalculateAction=PointsToCalculate",
    "CTL_PointsToCalculateTopComponent=PointsToCalculate Window",
    "HINT_PointsToCalculateTopComponent=This is a PointsToCalculate window"
})
public final class PointsToCalculateTopComponent extends TopComponent {

    private List<JCheckBox> points = new ArrayList();
    
    public PointsToCalculateTopComponent() {
        initComponents();
        setName(Bundle.CTL_PointsToCalculateTopComponent());
        setToolTipText(Bundle.HINT_PointsToCalculateTopComponent());
        addPointsToList();
    }

    //method for adding all enabled points to list
    private void addPointsToList(){
        
        for( Component comp : jPanel1.getComponents() ) {
            if( comp instanceof JCheckBox && comp.isEnabled()) points.add( (JCheckBox)comp );
        }
    }
    
    //return array of choosen points to calculate
    public int[] getPointsArray(){
        List<Integer> test = new ArrayList<>();
        
        for(JCheckBox c : points){
            if(c.isSelected()){
                test.add(Integer.parseInt(c.getName()));
            }
        }
        
        Collections.sort(test);
        
        int[] array = new int[test.size()];
        for(int i = 0; i < test.size(); i++) {
            array[i] = test.get(i);
        }
        
        return array;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        AL_L = new javax.swing.JCheckBox();
        N = new javax.swing.JCheckBox();
        PRN = new javax.swing.JCheckBox();
        LS = new javax.swing.JCheckBox();
        STO = new javax.swing.JCheckBox();
        LI = new javax.swing.JCheckBox();
        CH_R = new javax.swing.JCheckBox();
        CH_L = new javax.swing.JCheckBox();
        CP_R = new javax.swing.JCheckBox();
        EX_R = new javax.swing.JCheckBox();
        EX_L = new javax.swing.JCheckBox();
        EN_R = new javax.swing.JCheckBox();
        EN_L = new javax.swing.JCheckBox();
        PAI_L = new javax.swing.JCheckBox();
        PAS_R = new javax.swing.JCheckBox();
        PAS_L = new javax.swing.JCheckBox();
        PAI_R = new javax.swing.JCheckBox();
        G = new javax.swing.JCheckBox();
        SN = new javax.swing.JCheckBox();
        AL_R = new javax.swing.JCheckBox();
        CP_L = new javax.swing.JCheckBox();
        SL = new javax.swing.JCheckBox();
        GN = new javax.swing.JCheckBox();
        GOL_R = new javax.swing.JCheckBox();
        GOL_L = new javax.swing.JCheckBox();
        ZY_R = new javax.swing.JCheckBox();
        ZY_L = new javax.swing.JCheckBox();
        PG = new javax.swing.JCheckBox();
        T_R = new javax.swing.JCheckBox();
        T_L = new javax.swing.JCheckBox();
        SA_R = new javax.swing.JCheckBox();
        SA_L = new javax.swing.JCheckBox();
        SBA_L = new javax.swing.JCheckBox();
        PA_R = new javax.swing.JCheckBox();
        PA_L = new javax.swing.JCheckBox();
        OBS_R = new javax.swing.JCheckBox();
        OBS_L = new javax.swing.JCheckBox();
        OBI_R = new javax.swing.JCheckBox();
        OBI_L = new javax.swing.JCheckBox();
        SBA_R = new javax.swing.JCheckBox();
        PUP_R = new javax.swing.JCheckBox();
        PUP_L = new javax.swing.JCheckBox();
        GNA = new javax.swing.JCheckBox();
        PRA_R = new javax.swing.JCheckBox();
        PRA_L = new javax.swing.JCheckBox();
        V = new javax.swing.JCheckBox();
        O = new javax.swing.JCheckBox();
        RN_R = new javax.swing.JCheckBox();
        GO2_R = new javax.swing.JCheckBox();
        GO2_L = new javax.swing.JCheckBox();
        RN_L = new javax.swing.JCheckBox();
        RM_R = new javax.swing.JCheckBox();
        RM_L = new javax.swing.JCheckBox();
        P_L = new javax.swing.JCheckBox();
        EU2_R = new javax.swing.JCheckBox();
        EU2_L = new javax.swing.JCheckBox();
        P_R = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        AL_L.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(AL_L, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.12.text")); // NOI18N
        AL_L.setName("12"); // NOI18N

        N.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(N, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.13.text")); // NOI18N
        N.setName("13"); // NOI18N

        PRN.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(PRN, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.14.text")); // NOI18N
        PRN.setName("14"); // NOI18N

        LS.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(LS, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.15.text")); // NOI18N
        LS.setName("15"); // NOI18N

        STO.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(STO, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.16.text")); // NOI18N
        STO.setName("16"); // NOI18N

        LI.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(LI, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.17.text")); // NOI18N
        LI.setName("17"); // NOI18N

        CH_R.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(CH_R, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.18.text")); // NOI18N
        CH_R.setName("18"); // NOI18N

        CH_L.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(CH_L, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.19.text")); // NOI18N
        CH_L.setName("19"); // NOI18N

        CP_R.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(CP_R, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.20.text")); // NOI18N
        CP_R.setName("20"); // NOI18N

        EX_R.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(EX_R, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.1.text")); // NOI18N
        EX_R.setToolTipText(org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.1.toolTipText")); // NOI18N
        EX_R.setName("1"); // NOI18N

        EX_L.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(EX_L, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.2.text")); // NOI18N
        EX_L.setName("2"); // NOI18N

        EN_R.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(EN_R, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.3.text")); // NOI18N
        EN_R.setName("3"); // NOI18N

        EN_L.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(EN_L, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.4.text")); // NOI18N
        EN_L.setName("4"); // NOI18N

        PAI_L.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(PAI_L, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.8.text")); // NOI18N
        PAI_L.setName("8"); // NOI18N

        PAS_R.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(PAS_R, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.5.text")); // NOI18N
        PAS_R.setName("5"); // NOI18N

        PAS_L.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(PAS_L, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.6.text")); // NOI18N
        PAS_L.setName("6"); // NOI18N

        PAI_R.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(PAI_R, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.7.text")); // NOI18N
        PAI_R.setName("7"); // NOI18N

        G.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(G, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.9.text")); // NOI18N
        G.setName("9"); // NOI18N

        SN.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(SN, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.10.text")); // NOI18N
        SN.setName("10"); // NOI18N

        AL_R.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(AL_R, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.11.text")); // NOI18N
        AL_R.setName("11"); // NOI18N

        CP_L.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(CP_L, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.21.text")); // NOI18N
        CP_L.setName("21"); // NOI18N

        SL.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(SL, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.22.text")); // NOI18N
        SL.setName("22"); // NOI18N

        GN.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(GN, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.23.text")); // NOI18N
        GN.setName("23"); // NOI18N

        GOL_R.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(GOL_R, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.24.text")); // NOI18N
        GOL_R.setName("24"); // NOI18N

        GOL_L.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(GOL_L, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.25.text")); // NOI18N
        GOL_L.setName("25"); // NOI18N

        ZY_R.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(ZY_R, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.26.text")); // NOI18N
        ZY_R.setName("26"); // NOI18N

        ZY_L.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(ZY_L, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.27.text")); // NOI18N
        ZY_L.setName("27"); // NOI18N

        PG.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(PG, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.28.text")); // NOI18N
        PG.setName("28"); // NOI18N

        T_R.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(T_R, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.29.text")); // NOI18N
        T_R.setName("29"); // NOI18N

        T_L.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(T_L, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.30.text")); // NOI18N
        T_L.setName("30"); // NOI18N

        SA_R.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(SA_R, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.31.text")); // NOI18N
        SA_R.setName("31"); // NOI18N

        SA_L.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(SA_L, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.32.text")); // NOI18N
        SA_L.setName("32"); // NOI18N

        SBA_L.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(SBA_L, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.34.text")); // NOI18N
        SBA_L.setName("34"); // NOI18N

        PA_R.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(PA_R, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.35.text")); // NOI18N
        PA_R.setName("35"); // NOI18N

        PA_L.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(PA_L, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.36.text")); // NOI18N
        PA_L.setName("36"); // NOI18N

        OBS_R.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(OBS_R, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.37.text")); // NOI18N
        OBS_R.setName("37"); // NOI18N

        OBS_L.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(OBS_L, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.38.text")); // NOI18N
        OBS_L.setName("38"); // NOI18N

        OBI_R.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(OBI_R, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.39.text")); // NOI18N
        OBI_R.setName("39"); // NOI18N

        OBI_L.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(OBI_L, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.40.text")); // NOI18N
        OBI_L.setName("40"); // NOI18N

        SBA_R.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(SBA_R, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.33.text")); // NOI18N
        SBA_R.setName("33"); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(PUP_R, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.43.text")); // NOI18N
        PUP_R.setEnabled(false);
        PUP_R.setName("43"); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(PUP_L, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.44.text")); // NOI18N
        PUP_L.setEnabled(false);
        PUP_L.setName("44"); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(GNA, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.45.text")); // NOI18N
        GNA.setEnabled(false);
        GNA.setName("45"); // NOI18N

        PRA_R.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(PRA_R, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.41.text")); // NOI18N
        PRA_R.setName("41"); // NOI18N

        PRA_L.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(PRA_L, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.42.text")); // NOI18N
        PRA_L.setName("42"); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(V, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.48.text")); // NOI18N
        V.setEnabled(false);
        V.setName("48"); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(O, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.49.text")); // NOI18N
        O.setEnabled(false);
        O.setName("49"); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(RN_R, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.50.text")); // NOI18N
        RN_R.setEnabled(false);
        RN_R.setName("50"); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(GO2_R, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.46.text")); // NOI18N
        GO2_R.setEnabled(false);
        GO2_R.setName("46"); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(GO2_L, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.47.text")); // NOI18N
        GO2_L.setEnabled(false);
        GO2_L.setName("47"); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(RN_L, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.51.text")); // NOI18N
        RN_L.setEnabled(false);
        RN_L.setName("51"); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(RM_R, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.54.text")); // NOI18N
        RM_R.setEnabled(false);
        RM_R.setName("54"); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(RM_L, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.55.text")); // NOI18N
        RM_L.setEnabled(false);
        RM_L.setName("55"); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(P_L, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.56.text")); // NOI18N
        P_L.setEnabled(false);
        P_L.setName("56"); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(EU2_R, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.52.text")); // NOI18N
        EU2_R.setEnabled(false);
        EU2_R.setName("52"); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(EU2_L, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.53.text")); // NOI18N
        EU2_L.setEnabled(false);
        EU2_L.setName("53"); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(P_R, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.57.text")); // NOI18N
        P_R.setEnabled(false);
        P_R.setName("57"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(EX_R)
                            .addComponent(EX_L)
                            .addComponent(EN_L)
                            .addComponent(EN_R)
                            .addComponent(PAS_R)
                            .addComponent(PAS_L)
                            .addComponent(PAI_L)
                            .addComponent(PAI_R)
                            .addComponent(G))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(LI)
                                    .addGap(18, 18, 18))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(AL_L)
                                    .addComponent(AL_R)
                                    .addComponent(N)
                                    .addComponent(PRN)
                                    .addComponent(STO)
                                    .addComponent(LS)))
                            .addComponent(CP_R)
                            .addComponent(CH_L)
                            .addComponent(CH_R)))
                    .addComponent(SN))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(GOL_R)
                    .addComponent(GOL_L)
                    .addComponent(GN)
                    .addComponent(ZY_R)
                    .addComponent(PG)
                    .addComponent(T_R)
                    .addComponent(T_L)
                    .addComponent(ZY_L)
                    .addComponent(CP_L)
                    .addComponent(SL))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SA_L)
                            .addComponent(SA_R)
                            .addComponent(SBA_R)
                            .addComponent(SBA_L)
                            .addComponent(PA_R))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PRA_L)
                            .addComponent(PUP_R)
                            .addComponent(GNA)
                            .addComponent(PUP_L)
                            .addComponent(PRA_R)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PA_L)
                            .addComponent(OBS_R)
                            .addComponent(OBS_L)
                            .addComponent(OBI_R)
                            .addComponent(OBI_L))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(V)
                            .addComponent(RN_R)
                            .addComponent(O)
                            .addComponent(GO2_R)
                            .addComponent(GO2_L))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(P_R)
                    .addComponent(EU2_L)
                    .addComponent(RM_R)
                    .addComponent(P_L)
                    .addComponent(RM_L)
                    .addComponent(EU2_R)
                    .addComponent(RN_L))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(RN_L)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(EU2_R)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(EU2_L)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RM_R)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RM_L)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(P_L)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(P_R))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(SA_R)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(SA_L)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(SBA_R)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(SBA_L)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(PA_R))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(PRA_R)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(PRA_L)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(PUP_R)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(PUP_L)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(GNA)
                                    .addGap(0, 0, Short.MAX_VALUE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(PA_L)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(OBS_R)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(OBS_L)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(OBI_R)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(OBI_L))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(GO2_R)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(GO2_L)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(V)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(O)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(RN_R))))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(EX_R)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(EX_L)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(EN_R)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(EN_L)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(PAS_R)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(PAS_L)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(PAI_R)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(PAI_L)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(G)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SN))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(AL_R)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(AL_L)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(N)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(PRN)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(LS)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(STO))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                            .addGap(25, 25, 25)
                                            .addComponent(GOL_L)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(ZY_R))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(CP_L)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(SL)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(GN)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(GOL_R)
                                            .addGap(50, 50, 50))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(LI)
                                    .addComponent(ZY_L))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(CH_R)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(CH_L)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(CP_R))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(PG)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(T_R)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(T_L)))))))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        org.openide.awt.Mnemonics.setLocalizedText(jButton1, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.jButton1.text")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jButton2, org.openide.util.NbBundle.getMessage(PointsToCalculateTopComponent.class, "PointsToCalculateTopComponent.jButton2.text")); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(111, 111, 111))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(31, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        for(JCheckBox c : points){
            if(!c.isSelected()){
                c.setSelected(true);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        for(JCheckBox c : points){
            if(c.isSelected()){
                c.setSelected(false);
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox AL_L;
    private javax.swing.JCheckBox AL_R;
    private javax.swing.JCheckBox CH_L;
    private javax.swing.JCheckBox CH_R;
    private javax.swing.JCheckBox CP_L;
    private javax.swing.JCheckBox CP_R;
    private javax.swing.JCheckBox EN_L;
    private javax.swing.JCheckBox EN_R;
    private javax.swing.JCheckBox EU2_L;
    private javax.swing.JCheckBox EU2_R;
    private javax.swing.JCheckBox EX_L;
    private javax.swing.JCheckBox EX_R;
    private javax.swing.JCheckBox G;
    private javax.swing.JCheckBox GN;
    private javax.swing.JCheckBox GNA;
    private javax.swing.JCheckBox GO2_L;
    private javax.swing.JCheckBox GO2_R;
    private javax.swing.JCheckBox GOL_L;
    private javax.swing.JCheckBox GOL_R;
    private javax.swing.JCheckBox LI;
    private javax.swing.JCheckBox LS;
    private javax.swing.JCheckBox N;
    private javax.swing.JCheckBox O;
    private javax.swing.JCheckBox OBI_L;
    private javax.swing.JCheckBox OBI_R;
    private javax.swing.JCheckBox OBS_L;
    private javax.swing.JCheckBox OBS_R;
    private javax.swing.JCheckBox PAI_L;
    private javax.swing.JCheckBox PAI_R;
    private javax.swing.JCheckBox PAS_L;
    private javax.swing.JCheckBox PAS_R;
    private javax.swing.JCheckBox PA_L;
    private javax.swing.JCheckBox PA_R;
    private javax.swing.JCheckBox PG;
    private javax.swing.JCheckBox PRA_L;
    private javax.swing.JCheckBox PRA_R;
    private javax.swing.JCheckBox PRN;
    private javax.swing.JCheckBox PUP_L;
    private javax.swing.JCheckBox PUP_R;
    private javax.swing.JCheckBox P_L;
    private javax.swing.JCheckBox P_R;
    private javax.swing.JCheckBox RM_L;
    private javax.swing.JCheckBox RM_R;
    private javax.swing.JCheckBox RN_L;
    private javax.swing.JCheckBox RN_R;
    private javax.swing.JCheckBox SA_L;
    private javax.swing.JCheckBox SA_R;
    private javax.swing.JCheckBox SBA_L;
    private javax.swing.JCheckBox SBA_R;
    private javax.swing.JCheckBox SL;
    private javax.swing.JCheckBox SN;
    private javax.swing.JCheckBox STO;
    private javax.swing.JCheckBox T_L;
    private javax.swing.JCheckBox T_R;
    private javax.swing.JCheckBox V;
    private javax.swing.JCheckBox ZY_L;
    private javax.swing.JCheckBox ZY_R;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
